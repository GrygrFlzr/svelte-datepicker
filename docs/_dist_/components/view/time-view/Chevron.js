import './Chevron.css.proxy.js';
/* src/components/view/time-view/Chevron.svelte generated by Svelte v3.30.0 */
import {
	SvelteComponent,
	attr,
	bubble,
	detach,
	element,
	init,
	insert,
	listen,
	noop,
	safe_not_equal,
	toggle_class
} from "../../../../web_modules/svelte/internal.js";

function create_fragment(ctx) {
	let span;
	let mounted;
	let dispose;

	return {
		c() {
			span = element("span");
			attr(span, "class", "chevron svelte-twxu81");
			toggle_class(span, "bottom", !/*up*/ ctx[0]);
		},
		m(target, anchor) {
			insert(target, span, anchor);

			if (!mounted) {
				dispose = listen(span, "click", /*click_handler*/ ctx[1]);
				mounted = true;
			}
		},
		p(ctx, [dirty]) {
			if (dirty & /*up*/ 1) {
				toggle_class(span, "bottom", !/*up*/ ctx[0]);
			}
		},
		i: noop,
		o: noop,
		d(detaching) {
			if (detaching) detach(span);
			mounted = false;
			dispose();
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	let { up = true } = $$props;

	function click_handler(event) {
		bubble($$self, event);
	}

	$$self.$$set = $$props => {
		if ("up" in $$props) $$invalidate(0, up = $$props.up);
	};

	return [up, click_handler];
}

class Chevron extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, instance, create_fragment, safe_not_equal, { up: 0 });
	}
}

export default Chevron;